{"ts":1365310102536,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//h2.SparseArray\n//Hart\n//04/11/13\n\n#include <iostream>\nusing namespace std;\n\nclass SparseArray{\n    public:\n\t\tSparseArray(); // construct an SparseArray with no nonzero elements\n\t\tunsigned get( unsigned long long index ); // return an element from the array\n\t\tSparseArray & set( unsigned long long index, unsigned value ); // set array element to value\n\tprivate:\n\t\tunsigned nonZeroElements;\n\t\tunsigned long long indexArr[20];\n\t\tunsigned valueArr[20];\n}; // SparseArray\n\nbool die( const string & msg );\n\nint main() {\n\tSparseArray a;\n\t\n\tunsigned long long index = 1;\n\tfor( unsigned i = 0; i <= 20; i++, index *= 4 )\n\t\t//cout << index << \" - \" << i << endl, a.set( index, i ), cout << endl;\n\t\ta.set( index, i );\n/*\t\n\tcout << a.get(1099511627776) << endl;\n\tcout << endl;\n*/\t\n\tunsigned total = 0;\n\tindex = 1;\n\tfor( unsigned i = 0; i <= 40; i++, index *= 2 )\n\t\ttotal += a.get(index);\n\tcout <<total;\n/*\t\n\tcout << endl << endl;\n/*\n\tint t = 0;\n\tfor(int i = 0; i <= 20; i++){\n\t\tt += i;\n\t\tcout << t << \" / \" << i << endl;\n\t}\n\t\n\tcout << endl;\n/*\n\ta.set(9999, 1), cout << endl << endl;\n\t\n\ta.set(64, 0).set(16777216, 0);\n\ta.set(16, 33);\n\tcout << a.get(16);\n\t\n\tcout << endl << endl;\n\t\n\ta.set(9871234, 13).set(1, 17);\n\t\n\tcout << endl;\n*/\t\n\treturn 0;\n} //main()\n\nbool die( const string & msg ){\n\t\t//cerr <<endl <<\"Fatal error: \" <<msg <<endl;\n\t\t//exit( EXIT_FAILURE );\n\t\t\n\t\tcout << endl << \"Fatal error: \" << msg << endl;\n} //die( const string & msg )\n\nSparseArray::SparseArray(){\n\tthis->nonZeroElements = 0;\n\tthis->indexArr = {0};\n\tthis->valueArr = {0};\n}\n\nunsigned SparseArray::get( unsigned long long index ){\t\n\tfor (int i = 0; i < 20; i++){\n\t\tif (indexArr[i] == index) return valueArr[i];\n\t}\n\t\n\treturn 0;\n}\n\nSparseArray &SparseArray::set( unsigned long long index, unsigned value ){\n\tif (index > 1e17) die(\"Number is not less than 1e17.\");\n\telse if (nonZeroElements > 20) die(\"There are already 20 nonzero values assigned.\");\n\telse if ((value == 0) && (get(index))){\n\t\tint i = 0;\n\t\tfor (i; i < 20; i++){\n\t\t\tif (indexArr[i] == index) break;\n\t\t}\n\t\t//cout << index << \" / \" << value << \" - \" << i << endl;\n\t\tthis->indexArr[i] = 0;\n\t\tthis->valueArr[i] = 0;\n\t\tif (nonZeroElements != 0) this->nonZeroElements--;\n\t\t//cout << index << \" / \" << value << \" setZero \" << get(index) << endl;\t\t\t\n\t} else {\n\t\tif (get(index)){\n\t\t\tint i = 0;\n\t\t\tfor (i; i < 20; i++){\n\t\t\t\tif (indexArr[i] == index) break;\n\t\t\t}\n\t\t\tthis->valueArr[i] = value;\n\t\t\t//cout << index << \" / \" << value << \" resetValue \" << get(index) << endl;\t\t\t\n\t\t} else if (nonZeroElements >= 20) die(\"There are already 20 nonzero values assigned.\");\n\t\telse {\n\t\t\tint i = 0;\n\t\t\tfor (i; i < 20; i++){\n\t\t\t\tif (valueArr[i] == 0) break; //Edge case, it's possible for indexArr[i] to hold a value while valueArr[i] does not. There fore utilizing valueArr[i] to check for first zero occurrence to set values, keeping arrays parallel.\n\t\t\t}\n\t\t\t//cout << \"NonZeroes - \" << nonZeroElements << \" indexArr[\" << i << \"]\" << endl; //100 000 000 000 000 000\n\t\t\tthis->indexArr[i] = index;\n\t\t\t//cout << index << endl;\n\t\t\tthis->valueArr[i] = value;\n\t\t\t//cout << value << endl; //1 000 000 000 002\n\t\t\tif (get(index)) this->nonZeroElements++;\n\t\t\t//cout << index << \" / \" << value << \" setIndex/Value \" << \"NonZeroes Now = \" << nonZeroElements << \" -- get(index) returns \" << get(index) << endl << endl;\t\t\t\n\t\t}\n\t}\n\t\n\treturn *this;\n}"]],"start1":0,"start2":0,"length1":0,"length2":3354}]],"length":3354}
{"contributors":[],"silentsave":false,"ts":1365310165551,"patch":[[{"diffs":[[0,") {\n"],[-1,"\tSparseArray a;\n\t\n\tunsigned long long index = 1;\n\tfor( unsigned i = 0; i <= 20; i++, index *= 4 )\n\t\t//cout << index << \" - \" << i << endl, a.set( index, i ), cout << endl;\n\t\ta.set( index, i );\n/*\t\n\tcout << a.get(1099511627776) << endl;\n\tcout << endl;\n*/\t\n\tunsigned total = 0;\n\tindex = 1;\n\tfor( unsigned i = 0; i <= 40; i++, index *= 2 )\n\t\ttotal += a.get(index);\n\tcout <<total;\n/*\t\n\tcout << endl << endl;\n/*\n\tint t = 0;\n\tfor(int i = 0; i <= 20; i++){\n\t\tt += i;\n\t\tcout << t << \" / \" << i << endl;\n\t}\n\t\n\tcout << endl;\n/*\n\ta.set(9999, 1), cout << endl << endl;\n\t\n\ta.set(64, 0).set(16777216, 0);\n\ta.set(16, 33);\n\tcout << a.get(16);\n\t\n\tcout << endl << endl;\n\t\n\ta.set(9871234, 13).set(1, 17);\n\t\n\tcout << endl;\n*/\t"],[1,"    "],[0,"\n\tre"]],"start1":526,"start2":526,"length1":714,"length2":12},{"diffs":[[0,"sg ){\n\t\t"],[-1,"//"],[0,"cerr <<e"]],"start1":584,"start2":584,"length1":18,"length2":16},{"diffs":[[0,"endl;\n\t\t"],[-1,"//"],[0,"exit( EX"]],"start1":630,"start2":630,"length1":18,"length2":16},{"diffs":[[0,");\n\t\t\n\t\t"],[1,"//"],[0,"cout << "]],"start1":657,"start2":657,"length1":16,"length2":18}]],"length":2650,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365589491399,"patch":[[{"diffs":[[0,"t. There"],[-1," "],[0,"fore uti"]],"start1":2056,"start2":2056,"length1":17,"length2":16}]],"length":2649,"saved":false}
{"ts":1365589666963,"patch":[[{"diffs":[[0,"ents > 20) die(\""],[1,"Cannot add another value. "],[0,"There are alread"]],"start1":1158,"start2":1158,"length1":32,"length2":58}]],"length":2675,"saved":false}
{"ts":1365589710939,"patch":[[{"diffs":[[0,"0) die(\""],[1,"Cannot add another value. "],[0,"There ar"]],"start1":1860,"start2":1860,"length1":16,"length2":42}]],"length":2701,"saved":false}
{"ts":1365589762567,"patch":[[{"diffs":[[0,"ues,"],[1," this"],[0," keep"],[-1,"ing"],[1,"s"],[0," arr"]],"start1":2188,"start2":2188,"length1":16,"length2":19}]],"length":2704,"saved":false}
