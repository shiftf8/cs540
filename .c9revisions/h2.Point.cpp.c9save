{"ts":1364196440426,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//h2.Point\n//Hart\n//03/28/13\n\n#include <cmath>\n#include <iostream>\nusing namespace std;\n\nclass Point{\n    public:\n\t\tPoint( double x = 0, double y = 0 );\n\t\tdouble getX() const;\n\t\tdouble getY() const;\n\t\tPoint & setX( double x ); // mutator, returning reference to self\n\t\tPoint & setY( double y );\n\t\tconst Point & output() const;\n\t\tdouble distance( const Point & other ) const;\n\t\n\tprivate:\n\t\tdouble x;\n\t\tdouble y;\n};\n\ndouble area( const Point & a, const Point & b, const Point & c );\n\nint main(){\n\tPoint a(0, 0);\n\tPoint b(3, 4);\n\tcout << a.distance(b) << endl;\n\tcout << \"]===[\" << endl;\n\t\n\tPoint c(3, 0);\n\tcout << area(a, b, c) << endl;\n\tcout << \"]===[\" << endl;\n\n\treturn 0;\n}\n\nPoint::Point( double x, double y ){\n\tsetX(x);\n\tsetY(y);\n}\n\ndouble Point::getX() const{\n\treturn x;\n}\n\ndouble Point::getY() const{\n\treturn y;\n}\n\nPoint &Point::setX( double x ){\n\tthis->x = x;\n\treturn *this;\n}\n\nPoint &Point::setY( double y ){\n\tthis->y = y;\n\treturn *this;\n}\n\nconst Point &Point::output() const{\n\tcout << \"(\" << getX() << \", \" << getY() << \")\" << endl;\n\treturn *this;\n}\n\ndouble Point::distance( const Point & other ) const{\n\tdouble lengthX, lengthY, distanceXY;\n\t\n\tlengthX = abs(getX() - other.getX());\n\tlengthY = abs(getY() - other.getY());\n\tdistanceXY = sqrt(pow(lengthX, 2) + pow(lengthY, 2));\n\t//cout << distanceXY << endl;\n\treturn distanceXY;\n}\n\ndouble area( const Point & a, const Point & b, const Point & c ){\n\tdouble lengthAB, lengthBC, lengthCA, halfPerimeter, areaOfTriangle;\n\t\n\tlengthAB = a.distance(b);\n\tlengthBC = b.distance(c);\n\tlengthCA = c.distance(a);\n\thalfPerimeter = (lengthAB + lengthBC + lengthCA) / 2;\n\tareaOfTriangle = sqrt(halfPerimeter * (halfPerimeter - lengthAB) * (halfPerimeter - lengthBC) * (halfPerimeter - lengthCA));\n\treturn areaOfTriangle;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":1775}]],"length":1775}
{"contributors":[],"silentsave":false,"ts":1364196483429,"patch":[[{"diffs":[[0,"\n//0"],[-1,"3/28"],[1,"4/11"],[0,"/13\n"]],"start1":30,"start2":30,"length1":12,"length2":12}]],"length":1775,"saved":false}
{"ts":1364196604169,"patch":[[{"diffs":[[0,"stream>\n"],[1,"#include <string>\n"],[0,"using na"]],"start1":72,"start2":72,"length1":16,"length2":34},{"diffs":[[0,"t & c );"],[1,"\nbool die( const string & msg );"],[0,"\n\nint ma"]],"start1":503,"start2":503,"length1":16,"length2":48},{"diffs":[[0,"turn 0;\n"],[-1,""],[0,"}\n\n"],[1,"bool die( const string & msg ){\n\t\t//cerr <<endl <<\"Fatal error: \" <<msg <<endl;\n\t\t//exit( EXIT_FAILURE );\n\t\t\n\t\tcout << endl << \"Fatal error: \" << msg << endl;\n} //die( const string & msg )\n\n"],[0,"Point::P"]],"start1":727,"start2":727,"length1":19,"length2":209}]],"length":2015,"saved":false}
{"ts":1364196741944,"patch":[[{"diffs":[[0,"am>\n"],[-1,"#include <string>\n"],[0,"usin"]],"start1":76,"start2":76,"length1":26,"length2":8},{"diffs":[[0,"(){\n"],[-1,"\tPoint a(0, 0);\n\tPoint b(3, 4);\n\tcout << a.distance(b) << endl;\n\tcout << \"]===[\" << endl;\n\t\n\tPoint c(3, 0);\n\tcout << area(a, b, c) << endl;\n\tcout << \"]===[\" << endl;\n\n\treturn 0;\n}\n\nbool die( const string & msg ){\n\t\t//cerr <<endl <<\"Fatal error: \" <<msg <<endl;\n\t\t//exit( EXIT_FAILURE );\n\t\t\n\t\tcout << endl << \"Fatal error: \" << msg << endl;\n} //die( const string & msg "],[1,"\n\treturn 0;\n} //main("],[0,")\n\nP"]],"start1":535,"start2":535,"length1":376,"length2":29}]],"length":1650,"saved":false}
{"ts":1364196783424,"patch":[[{"diffs":[[0,"c );"],[-1,"\nbool die( const string & msg );"],[0,"\n\nin"]],"start1":489,"start2":489,"length1":40,"length2":8}]],"length":1618,"saved":false}
