{"ts":1363852234378,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//h2\n//Hart\n//03/28/13\n\n#include <iostream>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nColor\nclass Color{\nprivate:\nColor( unsigned red = 0, unsigned green = 0, unsigned blue = 0 ); // ctor\nunsigned getRed() const; // accessor\nunsigned getGreen() const; // accessor\nunsigned getBlue() const; // accessor\nColor & setRed( unsigned red ); // mutator\nColor & setGreen( unsigned green ); // mutator\nColor & setBlue( unsigned blue ); // mutator\nColor & output() const;\nprivate:\n\n}; // Color\n\nColor mixture( const Color & color0, const Color & color1, double weight = 0.5 );\n\nbool die( const string & msg );\n\nint main(){\n    \n\t\n\treturn 0;\n}\n\nbool die( const string & msg ){\n\t\t//cerr <<endl <<\"Fatal error: \" <<msg <<endl;\n\t\t//exit( EXIT_FAILURE );\n\t\t\n\t\tcout << endl << \"Fatal error: \" << msg << endl;\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":824}]],"length":824}
{"contributors":[],"silentsave":false,"ts":1364191998009,"patch":[[{"diffs":[[0,"Rob\n//h2"],[-1,""],[0,""],[1,".Color"],[0,"\n//Hart\n"]],"start1":9,"start2":9,"length1":16,"length2":22},{"diffs":[[0,"/28/13\n\n"],[1,"#include <math.h>\n"],[0,"#include"]],"start1":35,"start2":35,"length1":16,"length2":34},{"diffs":[[0,"am>\n"],[-1,"#include <sstream>\n"],[0,"#inc"]],"start1":77,"start2":77,"length1":27,"length2":8},{"diffs":[[0,"e std;\n\n"],[-1,"Color\n"],[0,"class Co"]],"start1":113,"start2":113,"length1":22,"length2":16},{"diffs":[[0," Color{\n"],[-1,"private:\n"],[1,"    public:\n\t\t"],[0,"Color( u"]],"start1":126,"start2":126,"length1":25,"length2":30},{"diffs":[[0,"// ctor\n"],[1,"\t\t"],[0,"unsigned"]],"start1":214,"start2":214,"length1":16,"length2":18},{"diffs":[[0,"st; // accessor\n"],[1,"\t\t"],[0,"unsigned getGree"]],"start1":245,"start2":245,"length1":32,"length2":34},{"diffs":[[0,"ccessor\n"],[1,"\t\t"],[0,"unsigned"]],"start1":294,"start2":294,"length1":16,"length2":18},{"diffs":[[0,"ccessor\n"],[1,"\t\t"],[0,"Color & "]],"start1":334,"start2":334,"length1":16,"length2":18},{"diffs":[[0,"d ); // mutator\n"],[1,"\t\t"],[0,"Color & setGreen"]],"start1":371,"start2":371,"length1":32,"length2":34},{"diffs":[[0,"n ); // mutator\n"],[1,"\t\t"],[0,"Color & setBlue("]],"start1":420,"start2":420,"length1":32,"length2":34},{"diffs":[[0,"mutator\n"],[1,"\t\tconst "],[0,"Color & "]],"start1":475,"start2":475,"length1":16,"length2":24},{"diffs":[[0," const;\n"],[1,"\t\n\t"],[0,"private:"]],"start1":507,"start2":507,"length1":16,"length2":19},{"diffs":[[0,"rivate:\n"],[1,"\t\tunsigned red;\n\t\tunsigned green;\n\t\tunsigned blue;"],[0,"\n}; // C"]],"start1":519,"start2":519,"length1":16,"length2":66},{"diffs":[[0," 0.5 );\n"],[-1,"\n"],[0,"bool die"]],"start1":665,"start2":665,"length1":17,"length2":16},{"diffs":[[0,"(){\n"],[-1,"    \n\t"],[1,"\tColor c0;\n\tColor c1(1, 255, 0);\n\t//c1.setRed(-1);\n\t//c1.setGreen(256);\n\tc1.setBlue(33);\n\tcout << \"]===[\" << endl;\n\t\n\tcout << c1.getRed() << endl;\n\tcout << c0.getRed() << endl;\n\tcout << \"]===[\" << endl;\n\n\tc1.output();\n\tcout << \"]===[\" << endl;\n\n\tColor c2(0, 2, 0);\n\tColor c3(0, 0, 255);\n\tmixture(c2, c3).output(); //<0, 128, 128>\n\tcout << \"]===[\" << endl;\n"],[0,"\n\tre"]],"start1":714,"start2":714,"length1":14,"length2":364},{"diffs":[[0,"urn 0;\n}"],[1," //main()"],[0,"\n\nbool d"]],"start1":1079,"start2":1079,"length1":16,"length2":25},{"diffs":[[0,"< endl;\n"],[1,"} //die( const string & msg )\n\nColor::Color(unsigned red, unsigned green, unsigned blue){\n\tsetRed(red);\n\tsetGreen(green);\n\tsetBlue(blue);\n}\n\nColor &Color::setRed(unsigned red){\n\tif (0 <= red && red < 256){\n\t\tthis->red = red;\n\t\treturn *this;\n\t} else die(\"Red out of range [0, 255]\");\n}\n\nColor &Color::setGreen(unsigned green){\n\tif (0 <= green && green < 256){\n\t\tthis->green = green;\n\t\treturn *this;\n\t} else die(\"Green out of range [0, 255]\");\n}\n\nColor &Color::setBlue(unsigned blue){\n\tif (0 <= blue && blue < 256){\n\t\tthis->blue = blue;\n\t\treturn *this;\n\t} else die(\"Blue out of range [0, 255]\");\n}\n\nunsigned Color::getRed() const{\n\treturn red;\n}\n\nunsigned Color::getGreen() const{\n\treturn green;\n}\n\nunsigned Color::getBlue() const{\n\treturn blue;\n}\n\nconst Color &Color::output() const{\n\tcout << \"<\" << getRed() << \", \" << getGreen() << \", \" << getBlue() << \">\" << endl;\n\treturn *this;\n}\n\nColor mixture( const Color & color0, const Color & color1, double weight ){\n\tColor mix, temp;\n\tdouble weighted, intpart;\n\t\n\tif (color0.getRed()){\n\t\tweighted = color0.getRed() * weight;\n\t\tif (modf(weighted, &intpart) >= .5) mix.setRed(weighted + 1);\n\t\telse mix.setRed(weighted);\n\t}\n\tif (color0.getGreen()){\n\t\tweighted = color0.getGreen() * weight;\n\t\tif (modf(weighted, &intpart) >= .5) mix.setGreen(weighted + 1);\n\t\telse mix.setGreen(weighted);\n\t}\n\tif (color0.getBlue()){\n\t\tweighted = color0.getBlue() * weight;\n\t\tif (modf(weighted, &intpart) >= .5) mix.setBlue(weighted + 1);\n\t\telse mix.setBlue(weighted);\n\t}\n\t\n\tif (color1.getRed()){\n\t\tweighted = color1.getRed() * (1 - weight);\n\t\tif (modf(weighted, &intpart) >= .5) temp.setRed(weighted + 1);\n\t\telse temp.setRed(weighted);\n\t}\n\tif (color1.getGreen()){\n\t\tweighted = color1.getGreen() * (1 - weight);\n\t\tif (modf(weighted, &intpart) >= .5) temp.setGreen(weighted + 1);\n\t\telse temp.setGreen(weighted);\n\t}\n\tif (color1.getBlue()){\n\t\tweighted = color1.getBlue() * (1 - weight);\n\t\tif (modf(weighted, &intpart) >= .5) temp.setBlue(weighted + 1);\n\t\telse temp.setBlue(weighted);\n\t}\n\n\tmix.setRed(mix.getRed() + temp.getRed());\n\tmix.setGreen(mix.getGreen() + temp.getGreen());\n\tmix.setBlue(mix.getBlue() + temp.getBlue());\n\t\n\treturn mix;\n"],[0,"}\n"]],"start1":1249,"start2":1249,"length1":10,"length2":2170}]],"length":3419,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364196466093,"patch":[[{"diffs":[[0,"\n//0"],[-1,"3/28"],[1,"4/11"],[0,"/13\n"]],"start1":30,"start2":30,"length1":12,"length2":12}]],"length":3419,"saved":false}
{"ts":1364196592194,"patch":[[{"diffs":[[0,"public:\n"],[-1,"\t"],[1,"    "],[0,"\tColor( "]],"start1":138,"start2":138,"length1":17,"length2":20},{"diffs":[[0,"e(blue);\n}\n\n"],[1,"unsigned Color::getRed() const{\n\treturn red;\n}\n\nunsigned Color::getGreen() const{\n\treturn green;\n}\n\nunsigned Color::getBlue() const{\n\treturn blue;\n}\n\n"],[0,"Color &Color"]],"start1":1389,"start2":1389,"length1":24,"length2":174},{"diffs":[[0,"\n}\n\n"],[-1,"unsigned Color::getRed() const{\n\treturn red;\n}\n\nunsigned Color::getGreen() const{\n\treturn green;\n}\n\nunsigned Color::getBlue() const{\n\treturn blue;\n}\n\n"],[0,"cons"]],"start1":2003,"start2":2003,"length1":158,"length2":8}]],"length":3422,"saved":false}
{"ts":1364196677597,"patch":[[{"diffs":[[0,"n(){"],[-1,"\n\tColor c0;\n\tColor c1(1, 255, 0);\n\t//c1.setRed(-1);\n\t//c1.setGreen(256);\n\tc1.setBlue(33);\n\tcout << \"]===[\" << endl;\n\t\n\tcout << c1.getRed() << endl;\n\tcout << c0.getRed() << endl;\n\tcout << \"]===[\" << endl;\n\n\tc1.output();\n\tcout << \"]===[\" << endl;\n\n\tColor c2(0, 2, 0);\n\tColor c3(0, 0, 255);\n\tmixture(c2, c3).output(); //<0, 128, 128>\n\tcout << \"]===[\" << endl;"],[0,"\n\n\tr"]],"start1":716,"start2":716,"length1":364,"length2":8},{"diffs":[[0,"sg ){\n\t\t"],[-1,"//"],[0,"cerr <<e"]],"start1":771,"start2":771,"length1":18,"length2":16},{"diffs":[[0,"endl;\n\t\t"],[-1,"//"],[0,"exit( EX"]],"start1":817,"start2":817,"length1":18,"length2":16},{"diffs":[[0,");\n\t\t\n\t\t"],[1,"//"],[0,"cout << "]],"start1":844,"start2":844,"length1":16,"length2":18}]],"length":3064,"saved":false}
