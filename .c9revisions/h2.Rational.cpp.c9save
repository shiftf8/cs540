{"ts":1364877267851,"silentsave":true,"restoring":false,"patch":[[]],"length":0}
{"contributors":[],"silentsave":false,"ts":1364877265611,"patch":[[{"diffs":[[1,"//Lamog, Rob\n//h2.Rational\n//Hart\n//04/11/13\n\n#include <iostream>\nusing namespace std;\n\nclass Rational{\n    public:\n\t\tRational( unsigned long long numerator = 0, unsigned long long denominator = 1 );\n\t\tunsigned long long getNumerator() const;\n\t\tunsigned long long getDenominator() const;\n\t\tdouble getFloatingValue() const;\n\t\tconst Rational & output() const;\n\t\tRational add( const Rational & other ) const;\n\t\tstatic unsigned long long gcf( unsigned long long a, unsigned long long b );\n\n\tprivate:\n\t\tunsigned long long numerator;\n\t\tunsigned long long denominator;\n\t\tvoid simplify();\n}; // class Rational\n\t\nbool die( const string & msg );\n\nint main(){\n\tcout << Rational(4, 12).getDenominator() << endl;\n\tcout << Rational(4668, 47580).getDenominator() << endl;\n\tcout << Rational(4, 12).getFloatingValue() << endl;\n\t\n\tRational(5, 1).output();\n\tRational(0, 1).output();\n\tRational(5, 2).output();\n\tRational(4, 12).output();\n\tRational(50, 10).output();\n\t\n\tRational(1, 2).add(Rational(2, 3)).output();\n\tRational(1, 2).add(Rational(1, 2)).output();\n\t\n\treturn 0;\n} //main()\n\nbool die( const string & msg ){\n\t\t//cerr <<endl <<\"Fatal error: \" <<msg <<endl;\n\t\t//exit( EXIT_FAILURE );\n\t\t\n\t\tcout << endl << \"Fatal error: \" << msg << endl;\n} //die( const string & msg )\n\nRational::Rational( unsigned long long numerator, unsigned long long denominator ){\n\tthis->numerator = numerator;\n\tthis->denominator = denominator;\n\t\n\tif (denominator == 0) die(\"Illegal operation: Cannot divide by zero.\");\t\n\tsimplify();\n}\n\nunsigned long long Rational::getNumerator() const{\n\treturn numerator;\n}\n\nunsigned long long Rational::getDenominator() const{\n\treturn denominator;\n}\n\ndouble Rational::getFloatingValue() const{\n\treturn static_cast<double>(numerator) / static_cast<double>(denominator);\n}\n\nconst Rational & Rational::output() const{\n\tif (getDenominator() == 1) cout << getNumerator();\n\telse if (getNumerator() == 0) cout << \"0\";\n\telse cout << getNumerator() << \" / \" << getDenominator();\n\t\n\tcout << endl;\n}\n\nRational Rational::add( const Rational & other ) const{\n\treturn Rational((getNumerator() * other.getDenominator() + other.getNumerator() * getDenominator()), (getDenominator() * other.getDenominator()));\n}\n\nunsigned long long Rational::gcf( unsigned long long a, unsigned long long b ){\n\twhile( a > 0 ){\n\t\tunsigned long long newA = b % a, newB = a;\n\t\ta = newA, b = newB;\n\t}\n\n\treturn b;\n}\n\nvoid Rational::simplify(){\n\tunsigned long long greatestCommonFactor;\n\t\n\tgreatestCommonFactor = gcf(numerator, denominator);\n\tnumerator = numerator / greatestCommonFactor;\n\tdenominator = denominator / greatestCommonFactor;\n\t\n\t//cout << greatestCommonFactor << endl;\n}"]],"start1":0,"start2":0,"length1":0,"length2":2638}]],"length":2638,"saved":false}
{"ts":1364877308159,"patch":[[{"diffs":[[0,"(){\n"],[-1,"\tcout << Rational(4, 12).getDenominator() << endl;\n\tcout << Rational(4668, 47580).getDenominator() << endl;\n\tcout << Rational(4, 12).getFloatingValue() << endl;\n\t\n\tRational(5, 1).output();\n\tRational(0, 1).output();\n\tRational(5, 2).output();\n\tRational(4, 12).output();\n\tRational(50, 10).output();\n\t\n\tRational(1, 2).add(Rational(2, 3)).output();\n\tRational(1, 2).add(Rational(1, 2)).output();\n\t"],[0,"\n\tre"]],"start1":645,"start2":645,"length1":399,"length2":8},{"diffs":[[0,"sg ){\n\t\t"],[-1,"//"],[0,"cerr <<e"]],"start1":699,"start2":699,"length1":18,"length2":16},{"diffs":[[0,"endl;\n\t\t"],[-1,"//"],[0,"exit( EX"]],"start1":745,"start2":745,"length1":18,"length2":16},{"diffs":[[0,");\n\t\t\n\t\t"],[1,"//"],[0,"cout << "]],"start1":772,"start2":772,"length1":16,"length2":18}]],"length":2245,"saved":false}
{"contributors":[],"silentsave":false,"ts":1365310035959,"patch":[[{"diffs":[[0,"< endl;\n"],[1,"    return *this;\n"],[0,"}\n\nRatio"]],"start1":1579,"start2":1579,"length1":16,"length2":34}]],"length":2263,"saved":false}
